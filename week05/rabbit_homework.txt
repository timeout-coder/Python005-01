1、在你目前的工作场景中，哪个业务适合使用 rabbitmq？ 引入 rabbitmq 主要解决什么问题?（非相关工作可以以设计淘宝购物和结账功能为例来描述）
在实际工作中，呼叫中心的事件通知服务适合通过rabbitmq来处理业务逻辑，通过rabbitmq来完成呼叫中心cti、路由服务、状态服务、tproxy等服务之间解耦和消息投递。

2、如何避免消息重复投递或重复消费？
tx_commit避免消息重复投递，auto_ack=True解决重复消费的问题
因为消息队列一般不保证消息的不重复，所以避免消息重复的逻辑一般在业务端实现，通用的解决方法是通过消费端的业务处理逻辑保证幂等性来应对。

3、交换机 fanout、direct、topic 有什么区别？
它们的区别主要是在对routing key的处理上。
direct - 客户端采用的routing key必须和交换机上设置的完全相同才能转发消息。
topic - 客户端采用的routing key只需要和交换机上的设置，模式匹配上就可以转发。
fanout - 忽略routing key。采用广播的方式，转发消息。

4、架构中引入消息队列是否利大于弊？你认为消息队列有哪些缺点？
引入消息队列通常利大于弊，使用异步方式解决并发等问题，缺点是如果对可靠性或并发性要求不那么高的话引入会增加系统复杂性，增加运维难度